  - platform: time_date
    display_options:
      - 'time'
      - 'date'
      - 'time_date'

  - platform: systemmonitor
    resources:
    - type: processor_use
    - type: disk_use_percent
      arg: /
    - type: memory_use_percent
    - type: processor_temperature
    - type: last_boot
    - type: disk_free
      arg: /
  - platform: sql
    db_url: mysql://hass:hass@core-mariadb/homeassistant?charset=utf8
    queries:
      - name: Maria DB size
        query: 'SELECT table_schema "database", Round(Sum(data_length + index_length) / 1048576, 2) "value" FROM information_schema.tables WHERE table_schema="homeassistant" GROUP BY table_schema;'
        column: 'value'
        unit_of_measurement: MB

# Время с последней перезагрузки
  - platform: template
    sensors:
      last_boot_custom:
        friendly_name: "Последняя перезагрузка"
#        entity_id:
#          - sensor.time
        value_template: >
           {% set uptime = as_timestamp (now()) -as_timestamp(states.sensor.last_boot.state) | int %}
           {% set minutes = (( uptime % 3600) / 60) | int %}
           {% set hours = ((uptime % 86400) / 3600) | int %}
           {% set days = (uptime / 86400) | int %}

             {% if uptime < 1 %}
               Меньше минуты
             {% else %}
               {% if days > 0 %}
                 {{ days }} д.
               {% endif %}
               {% if hours > 0 %}
                 {% if days > 0 %}
                   {{ ' ' }}
                 {% endif %}
                 {{ hours }} ч.
               {% endif %}
               {% if minutes > 0 %}
                 {% if days > 0 or hours > 0 %}
                   {{ ' ' }}
                 {% endif %}
                   {{ minutes }} мин.
               {% endif %}
             {% endif %}
        icon_template: mdi:clock
        
  # - platform: uptime
  #   name: online
    #unit_of_measurement: minutes

  - platform: template
    sensors:
       online_custom:
        friendly_name: "Home Assistant в онлайне"
        #entity_id:
      #  - sensor.time
        value_template: >
           {% set uptime = as_timestamp (now()) -as_timestamp(states.sensor.online.state) | int %}
           {% set minutes = (( uptime % 3600) / 60) | int %}
           {% set hours = ((uptime % 86400) / 3600) | int %}
           {% set days = (uptime / 86400) | int %}

             {% if uptime < 1 %}
               Меньше минуты
             {% else %}
               {% if days > 0 %}
                 {{ days }} д.
               {% endif %}
               {% if hours > 0 %}
                 {% if days > 0 %}
                   {{ ' ' }}
                 {% endif %}
                 {{ hours }} ч.
               {% endif %}
               {% if minutes > 0 %}
                 {% if days > 0 or hours > 0 %}
                   {{ ' ' }}
                 {% endif %}
                   {{ minutes }} мин.
               {% endif %}
             {% endif %}
        icon_template: mdi:clock
        
  - platform: template
    sensors:
       disk_amount:
        unit_of_measurement: GiB
        friendly_name: "Объём диска"
        #entity_id:
        #  - sensor.disk_free
        value_template: >
           {% set disk_amout = (states.sensor.disk_free.state)| float / ((100 - (states.sensor.disk_use_percent.state)| float) /100  )| float| round(2, "ceil") %}
           {{disk_amout | int}}
        icon_template: mdi:harddisk
        
  - platform: template
    sensors:
       disk_used:
        unit_of_measurement: GiB
        friendly_name: "Занятое место на диске"
        #entity_id:
        #  - sensor.disk_free
        value_template: >
           {% set disk_used = states.sensor.disk_amount.state | int - states.sensor.disk_free.state | int %}  
           {{disk_used}}
        icon_template: mdi:harddisk

  - platform: command_line
    name: CPU Temperature
    scan_interval: 15
    command: "cat /sys/class/thermal/thermal_zone0/temp"
    unit_of_measurement: "°C"
    value_template: "{{ value | multiply(0.001) | round(1) }}"
    
  - platform: command_line
    name: CPU Freaquency
    scan_interval: 15
    command: "cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq"
    unit_of_measurement: "Mhz"
    value_template: "{{ value | multiply(0.001) | round(1) }}"

  - platform: history_stats
    name: PS4 Played Time
    entity_id: media_player.playstation_4
    state: 'playing'
    type: time
    start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) -now().weekday() * 86400 }}'
    end: '{{ now() }}'
    
  - platform: template
    sensors:
      ps4_time_played:
       friendly_name: 'Еженедельное игровое время'
       value_template: >-
         {{ states.sensor.ps4_played_time.attributes.value }}