bathroom_2_ventilation:

    input_button:
      auto_vent_max_2:
        name: Автоматическое управление максимальной вытяжкой
        icon: mdi:fan

      auto_vent_min_2:
        name: Автоматическое управление минимальной вытяжкой
        icon: mdi:fan 

    input_number:
      hum_high_on_2:
        name: Влажность для включения вытяжки
        min: 60
        max: 95
        step: 1
        
      hum_low_off_2:
        name: Влажность для выключения вытяжки
        min: 10
        max: 104
        step: 1

    input_select:    
      vent_min_on_time_2:
        name: Время для включения минимальной вытяжки
        options:
          - 00:00:10
          - 00:01:00
          - 00:02:00
          - 00:03:00
          - 00:04:00
          - 00:05:00
          - 00:06:00
          - 00:07:00
          - 00:08:00
          - 00:09:00
          - 00:10:00
          - 00:15:00
          - 00:20:00
          - 00:30:00

      vent_min_off_time_2:
        name: Время для выключения минимальной вытяжки
        options:
          - 00:00:10
          - 00:05:00
          - 00:10:00
          - 00:15:00
          - 00:20:00
          - 00:25:00
          - 00:30:00

    input_boolean:
      auto_vent_max_2:
        name: Автоматическое управление сильной вытяжкой
        icon: mdi:script-text-play-outline

      auto_vent_min_2:
        name: Автоматическое управление слабой вытяжкой
        icon: mdi:script-text-play-outline

      

    timer:    
        vent_min_on_2:
          name: Вытяжка будет включена через - 
          duration: '00:03:00'
          restore: true 

        vent_min_off_2:
          name: Вытяжка будет выключена через - 
          duration: '00:15:00'
          restore: true   


    template:   
    
      - binary_sensor:

          - name: sensor_hum_high_on_2
            state: >
              {{ is_state('switch.fan_bathroom_2_l2', 'off')
                 and (states('sensor.bathroom2_temp_humidity_humidity') | int >= (states('input_number.hum_high_on_2') | int))
                 and is_state('input_boolean.auto_vent_max_2', 'on')
              }}
              
          - name: sensor_hum_low_off_2
            state: >
              {{ is_state('switch.fan_bathroom_2_l2', 'on')
                 and (states('sensor.bathroom2_temp_humidity_humidity') | int <= (states('input_number.hum_low_off_2') | int))
                 and is_state('input_boolean.auto_vent_max_2', 'on')
              }}

          - name: sensor_light_batroom_2_on
            state: >
              {{ is_state('switch.switch_bathroom_2_right', 'on') or is_state('switch.switch_bathroom_2_left', 'on') }}

          - name: sensor_light_batroom_2_vent_off
            state: > 
              {{ is_state('timer.vent_min_off_2', 'active')  }}

          - name: allow_change_humidity_bs
            state: >
              {{  is_state('switch.switch_bathroom_2_right', 'off') and 
                  is_state('switch.switch_bathroom_2_left', 'off') and 
                  is_state('switch.fan_bathroom_2_l1', 'off') and
                  is_state('switch.fan_bathroom_2_l2', 'off')
              }}              
              
    automation:

      - id: Автоматическое управление максимальной вытяжкой в маленькой ванной
        alias: auto_bathroom_ventilation_max_small
        initial_state: true
        trigger:
          - platform: state
            entity_id: binary_sensor.sensor_hum_high_on_2
            to: 'on'
          - platform: state
            entity_id: binary_sensor.sensor_hum_low_off_2
            to: 'on'
        action:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.sensor_hum_high_on_2
                    state: 'on'
                sequence:
                  - service: switch.turn_on
                    data:
                      entity_id: switch.fan_bathroom_2_l2
                  - service: switch.turn_off
                    data:
                      entity_id: switch.fan_bathroom_2_l1
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.sensor_hum_low_off_2
                    state: 'on'
                sequence:
                  - service: switch.turn_off
                    data:
                      entity_id: switch.fan_bathroom_2_l2

      - id: Автоматическое управление минимальной вытяжкой в маленькой ванной
        alias: auto_bathroom_ventilation_min_small
        initial_state: true
        trigger:
          - platform: state
            entity_id: binary_sensor.sensor_light_batroom_2_on
            to: 'on'
          - platform: state
            entity_id: binary_sensor.sensor_light_batroom_2_on
            to: 'off'
          - platform: event
            event_type: timer.finished
            id: vent_on_2
            event_data:
              entity_id: timer.vent_min_on_2
          - platform: event
            id: vent_off_2
            event_type: timer.finished
            event_data:
              entity_id: timer.vent_min_off_2
        condition:  
          condition: and
          conditions:
            - condition: state
              entity_id: input_boolean.auto_vent_min_2
              state: 'on'
            - condition: state
              entity_id: switch.fan_bathroom_2_l2
              state: 'off'
        action:
          - choose:
              #Включаем свет любым выключателем, триггерует бинарный сенсор, 
              #должен включиться таймер на включение вытяжки 
              - conditions:
                  - "{{ trigger.platform == 'state' }}"
                  - condition: state
                    entity_id: binary_sensor.sensor_light_batroom_2_on
                    state: 'on'
                  - condition: state
                    entity_id: timer.vent_min_on_2
                    state: idle
                  - condition: state
                    entity_id: timer.vent_min_off_2
                    state: idle
                  - condition: state
                    entity_id: switch.fan_bathroom_2_l1
                    state: 'off'
                  - condition: state
                    entity_id: switch.fan_bathroom_2_l2
                    state: 'off'
                sequence:
                  - data:
                      entity_id: timer.vent_min_on_2
                      duration: "{{ states('input_select.vent_min_on_time_2') }}"
                    service: timer.start
              - conditions:
                  - "{{ trigger.platform == 'state' }}"
                  - condition: state
                    entity_id: binary_sensor.sensor_light_batroom_2_on
                    state: 'on'
                  - condition: state
                    entity_id: timer.vent_min_on_2
                    state: idle
                  - condition: state
                    entity_id: timer.vent_min_off_2
                    state: active
                  - condition: state
                    entity_id: switch.fan_bathroom_2_l1
                    state: 'on'
                sequence:
                  - service: timer.cancel
                    entity_id: timer.vent_min_off_2

              #Выключаем свет во время работы ТАЙМЕРА1 на влючение вытяжки, триггерует бинарный сенсор
              #Таймер должен отключиться
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.sensor_light_batroom_2_on
                    state: 'off'
                  - condition: state
                    entity_id: timer.vent_min_on_2
                    state: active
                sequence:
                  - service: timer.cancel
                    entity_id: timer.vent_min_on_2

              #Выключаем свет во время работы ВЫТЯЖКИ, триггерует бинарный сенсор
              #ТАЙМЕР2 на отключение вытяжки должен запуститься
              - conditions:
                  - "{{ trigger.platform == 'state' }}"
                  - condition: state
                    entity_id: binary_sensor.sensor_light_batroom_2_on
                    state: 'off'
                  - condition: state
                    entity_id: switch.fan_bathroom_2_l1
                    state: 'on'
                sequence:
                  - data:
                      entity_id: timer.vent_min_off_2
                      duration: "{{ states('input_select.vent_min_off_time_2') }}"
                    service: timer.start
                  
              #ТАЙМЕР1 закончил работу, должен запустить ВЫТЯЖКУ, триггерит евент таймера по завершению
              - conditions:
                  - "{{ trigger.platform == 'event' and trigger.id == 'vent_on_2'}}"
                  - condition: state
                    entity_id: switch.fan_bathroom_2_l1
                    state: 'off'
                sequence:
                  - service: switch.turn_on
                    entity_id: switch.fan_bathroom_2_l1  

              #ТАЙМЕР2 закончил работу, должен ВЫКЛЮЧИТЬ ВЫТЯЖКУ, триггерит евент таймера по завершению
              - conditions:
                  - "{{ trigger.platform == 'event' and trigger.id == 'vent_off_2'}}"
                  - condition: state
                    entity_id: switch.fan_bathroom_2_l1
                    state: 'on'                    
                sequence:
                  - service: switch.turn_off
                    data:
                      entity_id: switch.fan_bathroom_2_l1 
                  - delay: '00:00:02'
                  - service: automation.trigger
                    data:
                      entity_id: automation.auto_bathroom2_set_humidity_min

      - id: Атоматическое изменение нижнего порога влажности в маленькой ванной
        alias: auto_bathroom2_set_humidity_min
        initial_state: true
        trigger:
          - platform: template
            value_template: >-
              {{ states('input_number.hum_low_off_2')| int !=
                states('sensor.bathroom2_temp_humidity_humidity')|int + 3}}
        action:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.allow_change_humidity_bs
                    state: 'on'
                sequence:
                  - service: input_number.set_value
                    target:
                      entity_id: input_number.hum_low_off_2 
                    data:
                      value: "{{ states('sensor.bathroom2_temp_humidity_humidity') | int + 3 }}"
                      

      - id: Отключение второй скорости вытяжки в маленькой ванной
        alias: auto_fan_bathroom_2_l2_off
        initial_state: true
        trigger:
          - platform: state
            entity_id: switch.fan_bathroom_2_l2
            to: 'off'
        action:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.sensor_light_batroom_2_on
                    state: 'on'
                sequence:
                  - service: switch.turn_off
                    data:
                      entity_id: switch.fan_bathroom_2_l2
                  - service: switch.turn_on
                    data:
                      entity_id: switch.fan_bathroom_2_l1
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.allow_change_humidity_bs
                    state: 'on'
                sequence:
                  - service: automation.trigger
                    data:
                      entity_id: automation.auto_bathroom2_set_humidity_min

      - id: Отключение света в маленькой ванной
        alias: turn_off_light_bs
        initial_state: true
        trigger:
        - platform: state
          entity_id: binary_sensor.kate_amazfit_gts_3
          to: "off"
          from: "on"
          for: '00:05:00'
        condition:
        - condition: time
          after: '06:00'
          before: '09:30'
          weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
        action:
        - service: switch.turn_off
          data:
            entity_id: 
              - switch.switch_bathroom_2_right
              - switch.switch_bathroom_2_left